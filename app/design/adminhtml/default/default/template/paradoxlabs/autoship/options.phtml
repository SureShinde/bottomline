<?php /** Herein, building the configurable option dropdowns allowing users to choose color, size, flavor, whatever the case. Supports anything Magento does. **/ ?>
<?php $profile	= $this->getProfile(); ?>
<?php $itemInfo	= $profile->getOrderItemInfo(); ?>
<?php if( $itemInfo['product_type'] == 'configurable' ): ?>
	<?php Mage::app()->setCurrentStore( $profile->getStoreId() ); ?>
	<?php /** Load parent and child products from RP **/ ?>
	<?php $parent		= Mage::getModel('catalog/product')->setStoreId( $profile->getStoreId() )->load( $itemInfo['product_id'] ); ?>
	<?php $selected		= Mage::getModel('catalog/product')->setStoreId( $profile->getStoreId() )->loadByAttribute( 'sku', $itemInfo['sku'] ); ?>
	
	<?php /** Set parent as the active product (necessary for optionsPrice later) **/ ?>
	<?php Mage::register('product', $parent); ?>
	
	<?php /** Get the configurable options **/ ?>
	<?php $config		= $this->getLayout()->createBlock('adminhtml/catalog_product_composite_fieldset_configurable')->setStoreId( $profile->getStoreId() )->setProduct( $parent ); ?>
	<?php $configJson	= $config->getJsonConfig(); ?>
	<?php $configArray	= json_decode( $configJson, 1 ); ?>
	
	<?php /** Build a super_attributes array to set default configurable values **/ ?>
	<?php $values 		= array( 'super_attribute' => array() ); ?>
	<?php foreach( $configArray['attributes'] as $attribute ): ?>
		<?php foreach( $attribute['options'] as $option ): ?>
			<?php if( $option['id'] == $selected->getData( $attribute['code'] ) ): ?>
				<?php $values['super_attribute'][ $attribute['id'] ] = $option['id']; ?>
				<?php continue; ?>
			<?php endif; ?>
		<?php endforeach; ?>
	<?php endforeach; ?>
	
	<?php /** Regenerate configurable options json **/ ?>
	<?php $parent->setPreconfiguredValues( new Varien_Object( $values ) ); ?>
	<?php $config->setProduct( $parent ); ?>
	<?php $configJson	= $config->getJsonConfig(); ?>
	
	<?php /** Output select boxes (values inserted on runtime) **/ ?>
	<?php foreach( $configArray['attributes'] as $attribute ): ?>
		<tr>
			<td class="label"><label for="subscription_period"><?php echo $attribute['label'] ?></label></td>
			<td class="value">
				<select name="super_attribute[<?php echo $attribute['id']; ?>]" id="attribute<?php echo $attribute['id']; ?>" class="required-entry super-attribute-select validate-select">
					<option value=""><?php echo $this->__('Choose an option...'); ?></option>
				</select>
			</td>
		</tr>
	<?php endforeach; ?>
	
	<tr>
		<td colspan="2">
			<div class="hidden">
				<?php /** Wrapper elements to suppress JS errors from the blocks we're coopting **/ ?>
				<span id="product_composite_configure_form"><input type="hidden" name="as_js_varname" /></span>
				<span id="product_composite_configure_messages"></span>
			</div>
		</td>
	</tr>
	
	<?php /** Output JS data to tie everything together **/ ?>
	<script type="text/javascript">
	//<![CDATA[
		// var spConfig = new Product.Config(<?php echo $configJson; ?>);
		var config = <?php echo $configJson; ?>;
		if (window.productConfigure) {
			config.containerId = window.productConfigure.blockFormFields.id;
			if (window.productConfigure.restorePhase) {
				config.inputsInitialized = true;
			}
		}
		ProductConfigure.spConfig = new Product.Config(config);
	//]]>
	</script>
	
	<?php Mage::app()->setCurrentStore( 0 ); ?>
<?php endif; ?>
